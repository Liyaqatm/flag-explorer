name: Flag Explorer CI/CD Pipeline

on:
  workflow_dispatch:  # Allow manual triggering
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run backend tests
        run: ./gradlew test

      - name: Generate test reports
        if: always()
        run: ./gradlew jacocoTestReport

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: backend-test-reports
          path: build/reports/tests/

  test-frontend:
    name: Test Vue Frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Lint Vue.js code
        working-directory: ./frontend
        run: npm run lint

      - name: Run Vue.js unit tests
        working-directory: ./frontend
        run: npm run test:unit

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: frontend-test-reports
          path: frontend/coverage/

  build:
    name: Build Application
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build Vue frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build:springboot

      - name: Build backend with Gradle
        run: ./gradlew build -x test

      - name: Upload application JAR
        uses: actions/upload-artifact@v3
        with:
          name: flag-explorer-app
          path: build/libs/*.jar

  deploy:
    name: Deploy Application
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Download application JAR
        uses: actions/download-artifact@v3
        with:
          name: flag-explorer-app
          path: artifacts

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: yourusername/flag-explorer:latest,yourusername/flag-explorer:${{ github.sha }}